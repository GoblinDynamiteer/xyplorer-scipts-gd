"_Db"
	//Faster than to include other libs
	perm $dbFilm = "C:\db\film.db";
	perm $dbTV = "C:\db\tv.db";
	perm $regexTVpath = "^\\\\DS\\TV\\";
	perm $regexMoviePath = "^\\\\DS\\FILM\\";
	perm $urlTxt = "D:\Google Drive\Scriptstuff\xyplorer\txt\url.txt";
	perm $skipList = "D:\Google Drive\Scriptstuff\xyplorer\txt\skiplist.txt";
	
	function isTV($path){
		if(regexmatches($path, $regexTVpath) != ""){
			return 1;
		}
		else{
			//msg "Not in TV";
			return 0;
		}
	}
	
	function isMovie($path){
		if(regexmatches($path, $regexMoviePath) != ""){
			return 1;
		}
		else{
			//msg "Not in Movies";
			return 0;
		}
	}

"_TV : EpisodeCheck"
	sub "_Db";
	$localEp = getkey("localep", <cc_name>, $dbTV);
	$lastAired = getkey("lastaired", <cc_name>, $dbTV);
	$skipCheck = strpos(readfile($skipList) , <cc_name>);
	//American Dad has other season ordering on TVMaze, than releases
	if(<cc_name> == "American Dad"){
		$localEp = replace($localEp, "S14E", "S13E");
	}
	//$skipCheck = regexmatches(<cc_name>, );
	if($lastAired == $localEp || $skipCheck > -1){
		return "Done: " . $localEp;
	}
	else {
		return "** Last: " . $lastAired . " [Local: " . $localEp . "]";
	}
 
"_TV : Year"
	sub "_Db";
	if(isTV(<cc_item>)){
		$year = getkey("year", <cc_name>, $dbTV);
	}
	else{
		$year = getkey("year", <cc_name>, $dbFilm);
	}
	return $year;

"_MovieSubs : Subs"
	sub "_Db";
	$enSub = 0;
	$svSub = 0;
	$subStr = "";
	if(quicksearch("*en.srt", <cc_item>, |) != ""){
		$enSub = 1;
	}
	if(quicksearch("*sv.srt", <cc_item>, |) != ""){
		$svSub = 1;
	}
	if($enSub && $svSub){
		$subStr = "En Sv";
	}
	elseif($enSub && !$svSub){
		$subStr = "En";
	}
	elseif(!$enSub && $svSub){
		$subStr = "Sv";
	}
	return $subStr;
	
"_TV : Status"
	sub "_Db";
	$nextep = getkey("nextaired", <cc_name>, $dbTV);
	$nextdate = getkey("nextaireddate", <cc_name>, $dbTV);
	$lastep = getkey("lastaired", <cc_name>, $dbTV);
	$lastepdate = getkey("lastaireddate", <cc_name>, $dbTV);
	$status = getkey("status", <cc_name>, $dbTV);
	if($status == "Running"){
		if($nextep == "No data for next episode!"){
			return $status . " (No data for next episode)";
		}
		else{
			return $status . ": " . $nextep . " (" . $nextdate .  ")";
		}
	}
	elseif($status == "Ended"){
		return $status . " (" . $lastepdate . ")";
	}
	else{
		return $status;
	}

"_TV : Genre"
	sub "_Db";
	if(isButtonDownALT()){
		return $ctrlBlock;
	}
	if(isTV(<cc_item>)){
		$year = getkey("genre", <cc_name>, $dbTV);
	}
	else{
		$year = getkey("genre", <cc_name>, $dbFilm);
	}
	return $year;
	
	
"_TV : Title"
	sub "_Db";
	if(isMovie(<cc_item>)){
		$title = getkey("title", <cc_name>, $dbFilm);
	}
	else{
		$title = "";
	}
	return $title;
	
"_LINKS : Links"
	sub "_Db";
	$path = <cc_path>;
	$name =  <cc_name>;
	$tvPopList = "RARBG;rarbg|TVMaze;tvmaze|IMDb;imdb";
	//Loads file with links to various websites
	$urls = readfile($urlTxt);
	if(isTV(<cc_path>)){
		$imdb = getkey("imdb", <cc_name>, $dbTV);
		$mazeid = getkey("tvmaze", <cc_name>, $dbTV);
		$choice = popupnested($tvPopList);
		//Find the token for url in <crlf>-separated list that contains value from popuplist
		$token = gettokenindex($choice, $urls, <crlf>);
		//Gets the url with the found token
		$site = gettoken($urls, $token, <crlf>);
		//Sets value to replace %STRING% with (in url-file)
		$replace = $choice == "tvmaze" ? $mazeid : $imdb;
		$site = replace($site, "%STRING%", $replace);
		//Opens the URL if the variable is set
		if(isset($site)){
			goto $site;
		}
	}
	elseif(isMovie(<cc_path>)){
		msg "MOVIE NOT BUILT!";
	}

