    include_once "..\const\include.xys";

    /* Write data do TV database
        Valid keys: imdb, tvmaze, genre, localep,
        year, status, lastaired, lastaireddate, nextaired, nextaireddate   */
	function db_tv_write_data($tv_show, $key, $data){
		setkey $data, $key, $tv_show, $PATH_DB_TV;
	}

    /*  Read data from TV database */
    function db_tv_read_data($tv_show, $key){
        return getkey(
            $key,
            $tv_show,
            $PATH_DB_TV
        );
    }

    /*  Read data from TV episode database */
    function db_episode_read_data($tv_show, $key){
        return getkey(
            $key,
            $tv_show,
            $PATH_DB_EPISODES
        );
    }

    /*  Update TV episode database with current local episodes */
	function db_tv_update_episode_list($tv_show){
		$current_episodes = file_list_video_files($PATH_DS_TV . $tv_show);
		$current_episodes = string_regex_season_episode($current_episodes);
		$old_episodes = getkey("files", $tv_show, $PATH_DB_EPISODES);
		setkey $current_episodes, "files", $tv_show, $PATH_DB_EPISODES;
		setkey $old_episodes, "files_pre", $tv_show, $PATH_DB_EPISODES;
	}

    /*  Read data from movie database
        Valid keys: year, genre, title, imdb    */
	function db_movie_read_data($movie, $key)
    {
		$data = getkey(
            $key,
            $movie,
            $PATH_DB_MOVIE
        );
		$retval = $data ? $data : 0;
        return $retval;
	}

    /* Remove movie from database */
    function db_movie_remove_from_db($movie)
    {
        setkey , , $movie, $PATH_DB_MOVIE;

        db_movie_listing_remove(
            string_movie_first_letter($movie), $movie);
    }

    /*  Write data to movie database */
    function db_movie_write_data($movie, $key, $data)
    {
		setkey $data, $key, $movie, $PATH_DB_MOVIE;
	}

    function db_movie_get_movies_for_letter($letter)
    {
        $data = getkey(
            "files",
            $letter,
            $PATH_DB_MOVIE_LIST
        );
        $retval = $data ? $data : 0;
        return $retval;
    }

    function db_movie_listing_update($letter)
    {
        $data = listfolder(
            $PATH_DS_MOVIE . $letter,
            $SETTING_LISTFOLDER_PATTERN_ALL,
            $SETTING_LISTFOLDER_NO_FILES + $SETTING_LISTFOLDER_NO_PATHS
        );
        setkey $data, "files", $letter, $PATH_DB_MOVIE_LIST;
    }

    function db_movie_listing_remove($letter, $movie)
    {
        $data = getkey("files", $letter, $PATH_DB_MOVIE_LIST);
        $data = replace($data, "$movie");
        $data = list_sort($data);
        setkey $data, "files", $letter, $PATH_DB_MOVIE_LIST;
    }

    /*  Update TV database with new TV-show info from TVMaze */
    function db_tv_update_data($tv_show)
    {
        $tvmaze_id = db_tv_read_data($tv_show, "tvmaze");
        $genre = python_tvmaze($tvmaze_id, "genre");
        $year = python_tvmaze($tvmaze_id, "year");
        $last_local_episode = file_tv_get_last_episode_in_path(
            $PATH_DS_TV . $tv_show);
        $show_status = python_tvmaze($tvmaze_id, "status");
        $episode_last = python_tvmaze($tvmaze_id, "last_aired");
        $episode_last_date = python_tvmaze($tvmaze_id, "last_aired_date");

        db_tv_write_data($tv_show, "genre", $genre);
        db_tv_write_data($tv_show, "year", $year);
        db_tv_write_data($tv_show, "localep", $last_local_episode);
        db_tv_write_data($tv_show, "status", $show_status);
        db_tv_write_data($tv_show, "lastaired", $episode_last);
        db_tv_write_data($tv_show, "lastaireddate", $episode_last_date);
    }

    function db_movie_update_data($movie_folder_name, $imdb)
    {
        $genre = python_omdb($imdb, "genre");
        $year = python_omdb($imdb, "year");
        $title = python_omdb($imdb, "title");

        if(!python_script_error($genre))
        {
            db_movie_write_data($movie_folder_name, "genre", $genre);
        }

        if(!python_script_error($year))
        {
            db_movie_write_data($movie_folder_name, "year", $year);
        }

        if(!python_script_error($title))
        {
            db_movie_write_data($movie_folder_name, "title", $title);
        }

    }

    /*  Get IMDb from database, works for both TV-show and Movie */
    function db_get_imdb($item)
    {
        $imdb = db_movie_read_data($item, "imdb");
        $retval = $imdb ? $imdb : db_tv_read_data($item, "imdb");
        return $retval;
    }

    /*  Checks if TV-show is new (not in database) */
    function db_tv_is_new_show($tv_show)
    {
        $retval = getsectionlist($tv_show, $PATH_DB_TV) ? 0 : 1;
        return $retval;
    }

    /*  Returns list of new (not in database) episodes in TV-show folder
    return 0 no new. */
    function db_tv_list_episodes_not_in_db($tv_show)
    {
        $retval = 0;

        $episodes_in_database = db_episode_read_data($tv_show, "files");
        $episodes_local = file_list_video_files($PATH_DS_TV . $tv_show);
        $episodes_local = list_get_episodes_s__e__($episodes_local);

        if($episodes_local != $episodes_in_database)
        {
            $retval = "";
            foreach($episode, $episodes_local, "|")
            {
                if(strpos($episodes_in_database, $episode) == $STRPOS_NOT_FOUND)
                {
                    $retval = $retval . $episode . "|";
                }
            }
            $retval = list_sort($retval);
        }

        return $retval;
    }
