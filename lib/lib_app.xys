    perm $exe_path_unrar = $PATH_SCRIPT_LOCATION . "\xyplorer\app\unrar.exe";
    perm $exe_path_rar = $PATH_SCRIPT_LOCATION . "\xyplorer\app\rar.exe";
    perm $exe_path_7zipa = $PATH_SCRIPT_LOCATION . "\xyplorer\app\7za.exe";
    perm $exe_path_7zip = "C:\Program Files\7-Zip\7z.exe";
    perm $exe_path_subtitleedit = "C:\Program Files\Subtitle Edit 3\SubtitleEdit.exe";
    perm $exe_path_mkvinfo = $PATH_SCRIPT_LOCATION . "\xyplorer\app\mkvtoolnix\mkvinfo.exe";
    perm $exe_path_mkvextract = $PATH_SCRIPT_LOCATION . "\xyplorer\app\mkvtoolnix\mkvextract.exe";
    perm $exe_path_putty = $PATH_SCRIPT_LOCATION . "\xyplorer\app\putty.exe";

    function app_extraction_unrar($source, $destination, $wait)
    {
        $wait = $wait ? 2 : 0;

        if(!exists($destination))
        {
            new($destination, "dir");
            wait 100;
        }

        status "Unraring: ". $source, 000000, progress;

        run '"' . $exe_path_unrar . '" x "' . $source . '" "' .
            $destination . '"', , $wait, 2;
    }

    /* Run filezilla and open local folder */
    function app_ftp_open_in_filezilla($folder)
    {
        if( !isset($exe_path_filezilla) ||
            !check_is_path_to_exe($exe_path_filezilla) ||
            !exists($exe_path_filezilla))
        {
            $search_dir = "C:\Program Files\";
            $executables = quicksearch("filezilla.exe", $search_dir, "|", s);
            perm $exe_path_filezilla = list_get_last_item($executables);

            writepv($PATH_PERM_PV_DIR);
        }

        if(exists($exe_path_filezilla))
        {
            run '"' . $exe_path_filezilla . '" -c "' .
                readfile($PATH_FILEZILLA_W_SITE) . '" --local="' .
                    $folder . '"';
        }

        else
        {
            msg $ERROR_EXE_NOT_FOUND_FILEZILLA;

            //Set manually?
        }
    }

    /*	 Returns full path to created RAR	*/
    function app_compress_rar($filename, $source, $location, $switch)
    {
        run '"' . $exe_path_rar . '" ' . $switch . ' "' . $location .
            $filename . '.rar" "' . $source . '"', , 1, 1;
        return $location . $filename . ".rar";
    }

    function app_compress_sevenzip($filename, $source, $location, $switch)
    {
        run '"' . $exe_path_7zipa . '" ' . $switch . ' "' . $location .
            $filename . '.7z" "' . $source . '"', , 1, 1;
        return $location . $filename . ".7z";
    }

    function app_extract_sevenzip($source, $destination, $wait)
    {
        $wait = $wait ? 2 : 0;

        if(!exists($destination))
        {
            new($destination, "dir");
            wait 100;
        }
        status "Extracting: ". $source, 000000, progress;

        run '"' . $exe_path_7zip . '" x "' . $source . '" -o"' .
            $destination . '"', , $wait, 2;
    }

    /* Extract subtitles with MKVExtract */
    function app_subtitle_mkvextract($source, $track_numbers)
    {
        $path = getpathcomponent($source, "path");
        $base = getpathcomponent($source, "base");
        $output_file = "";
        foreach($track_number, $track_numbers)
        {
            $output_file = $track_number . ':"' . $path . '\' . $base . '_' . $track_number . '.srt" ' . $output_file;
        }

        status "Extracting SRT from ". $source, 000000, progress;
        run '"' . $exe_path_mkvextract . '" tracks "' . $source . '" '. $output_file, , 1, 2;
    }

    /* Open file in MKVinfo */
    function app_video_mkv_info($source)
    {
        return runret($exe_path_mkvinfo . ' "' . $source . '"');
    }

    /* Open file or folder in Atom */
    function app_text_open_in_atom($path)
    {
        run 'atom "' . $path . '"';
    }

    /* Open repository path in GitKraken */
    function app_git_openrepo_kraken($repository_path)
    {
        if( !isset($exe_path_gitkraken) ||
            !check_is_path_to_exe($exe_path_gitkraken) ||
            !exists($exe_path_gitkraken))
        {
            $search_dir = %USERPROFILE% . "\AppData\Local\gitkraken\";
            $executables = quicksearch("gitkraken.exe", $search_dir, "|", s);
            perm $exe_path_gitkraken = list_get_last_item($executables);

            writepv($PATH_PERM_PV_DIR);
        }

        if(exists($exe_path_gitkraken))
        {
            run '"'. $exe_path_gitkraken .'" -p "' . $repository_path . '"';
        }

        else
        {
            msg $ERROR_EXE_NOT_FOUND_GITKRAKEN;
        }

    }

    /* SHH Connection with putty */
    function app_ssh_putty($address, $user, $port)
    {
        run '"'. $exe_path_putty .'"' .
            " -ssh " . $user . "@" . $address . " " . $port;
    }

    /* Open Git-Bash to and navigate to path */
    function app_git_openrepo_bash($path)
    {
        if( !isset($exe_path_gitbash) ||
            !check_is_path_to_exe($exe_path_gitbash) ||
            !exists($exe_path_gitbash))
        {
            $search_dir = "C:\Program Files\";
            $executables = quicksearch("git-bash.exe", $search_dir, "|", s);
            perm $exe_path_gitbash = list_get_last_item($executables);

            writepv($PATH_PERM_PV_DIR);
        }

        if(exists($exe_path_gitbash))
        {
            /* Convert 'C:\Path\Path Path' ==> 'C/Path/Path\ Path' */
            $path = replacelist($path, ":|\| ", "|/|\ ", "|");

            /* Workaround for opening path (could not find CLI command to
                open path): edit .bashrc */
            writefile(%USERPROFILE% . "\.bashrc", "cd /" . $path);
            open $exe_path_gitbash;
        }

        else
        {
            msg $ERROR_EXE_NOT_FOUND_GITBASH;
        }
    }
