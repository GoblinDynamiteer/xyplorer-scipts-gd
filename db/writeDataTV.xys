 include "..\lib\getDataTV.xys";
 include "..\lib\getSelectionInfo.xys";
 include "..\lib\getFileInfo.xys";
 include "..\lib\db.xys";
 include "..\lib\regex.xys";
 include "..\lib\list.xys";
 include "..\lib\securityChecks.xys";
 include "..\lib\string.xys";

	$fullPath = getFullPath();
	//Folder name is used as section in TV Database
	$folderName = getFolderName();
	//Checks if selected folder is in TV location of NAS
	//getFullPath returns zero at various errors
	if(!$fullPath || !isTV($fullPath)){
		end 1, "Something went wrong!";
	}
	//Gets IMDB-id from TV database
	$imdbID = getDbTVIMDb($folderName);
	//Triggers if ID wasn't found in database
	if(!$imdbID){
		//Asks for user input of IMDB-id or URL
		$imdbID = input(
			"ID not found in database!", 
			"Enter IMDB-id / URL for " . $folderName);
		//Extracts Id from string/URL
		$imdbID = trimIMDB($imdbID);
		setDbTVIMDb($folderName, $imdbID);
	}
	
	$lastep = getLastLocalEpisode($fullPath);
	$nextEp = episodeNextNumber($lastep);
	$nextEp2 = episodeNextSeason($lastep);
	
	$mid = getTVMaze($imdbID);
	if(TVEpisodeStatus($mid, $nextEp)){
		$collect = $nextEp;
	}
	
	elseif(TVEpisodeStatus($mid, $nextEp2)){
		$collect = $nextEp2;
	}
	
	else {
		$collect = 0;
	}
	
	if($collect){
		text "Next episode is: " . $collect . " which airs " . TVEpisodeAirdate($mid, $collect);
	}
	else {
		text "Could not find next episode!!! Show status: " . TVshowStatus($imdbID);
	}
	
