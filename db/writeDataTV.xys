 include "..\lib\getDataTV.xys";
 include "..\lib\getSelectionInfo.xys";
 include "..\lib\getFileInfo.xys";
 include "..\lib\db.xys";
 include "..\lib\regex.xys";
 include "..\lib\list.xys";
 include "..\lib\securityChecks.xys";
 include "..\lib\string.xys";
 include "..\lib\xyplorerCommands";

	$fullPath = getFullPath();
	//Folder name is used as section in TV Database
	$folderName = getFolderName();
	$section = $folderName;
	$tvShow = $folderName;
	$fullUpdate = 0;
	//Checks if selected folder is in TV location of NAS
	//getFullPath returns zero at various errors
	if(!$fullPath || !isTV($fullPath)){
		end 1, "Something went wrong!";
	}
	//Gets IMDB-id from TV database
	$imdbID = getDbTVIMDb($folderName);
	
	//Triggers if ID wasn't found in database
	if(!$imdbID){
		//Asks for user input of IMDB-id or URL
		$imdbID = input(
			"ID not found in database!", 
			"Enter IMDB-id / URL for " . $folderName);
		//Extracts Id from string/URL
		$imdbID = trimIMDB($imdbID);
		setDbTVIMDb($folderName, $imdbID);
		$fullUpdate = 1;
	}
	
	$mazeid = getDbTVMaze($section);
	if(!$mazeid){

		$mazeid = getTVMaze($section);
		if(!$mazeid){
			$mazeid = input(
			"TVMaze Id could not be set!", 
			"Enter manually!");
		}
	}
	if($mazeid){
		setDbTVMaze($folderName, $mazeid);
	}

	if($fullUpdate){
		setDbTVLocalEp($folderName, getLastLocalEpisode($fullPath));
		if(!getDbTVGenre($tvShow)){
				setDbTVGenre($folderName, getGenre($tvShow));
		}
		if(!getDbTVYear($tvShow)){
				setDbTVYear($folderName, getYear($tvShow));
		}
	}

	setDbTVStatus($section, TVshowStatus($tvShow));
	$lastAiredEpisode = getLastAiredEpisode($tvShow);
	$lastAiredEpisodeDate = getLastAiredDate($tvShow);
	$nextAiredEpisodeDate = getNextAiredEpisode($tvShow);
	$nextAiredEpisodeDate = getNextAiredDate($tvShow);
	
	setDbTVLastAired($section, $lastAiredEpisode);
	setDbTVLastAiredDate($section, $lastAiredEpisodeDate);
	setDbTVNextAired($section, getNextAiredEpisode($tvShow));
	setDbTVNextAiredDate($section, $nextAiredEpisodeDate);
	
	wait 200;
	setDBTVFiles($section);
	
	//Checks for new episodes, compares to database
	$list = getDBTVFiles($folderName);
	$localfiles = getLocalTVFiles($fullPath);
	$localfiles  = episodeSorter($localfiles);

	$newFiles = "";
	foreach($file, $localfiles, |){
		if(strpos($list , $file) == -1){
			$newFiles = $newFiles . "|" . $file;
		}
	}
	
	text $newFiles;
	
	wait 200;
	
	refreshWindow();



