    include_once "..\const\include.xys";

    $path = select_get_selected_folder_full_path();

    if($path == $FUNCTION_RETURN_ERROR)
    {
        end 1;
    }

    $folder_name = select_get_selected_folder_name();

    /* If selected folder is a tv-release (full season or single episode) */
    if( check_is_folder_tv_season_release($folder_name) ||
        check_is_folder_tv_episode_release($folder_name))
    {
        /* Determine extract tv-location */
        $tv_show_name_guess =
            string_regex_tv_title_from_release($folder_name);
        $tv_show_season_guess =
            string_regex_tv_season_from_release($folder_name);
        $extract_path_guess =
            $PATH_DS_TV . $tv_show_name_guess . "\" . $tv_show_season_guess;

        $extract_destination = $PATH_DS_TV;

        if(!exists($extract_path_guess))
        {
            if(input_ask_yes_no("Create folder: " . $extract_path_guess . "?"))
            {
                $extract_destination = new($extract_path_guess, "dir");
            }
        }

        else
        {
            $extract_destination = $extract_path_guess;
        }


        /* Let user select destination */
        $destination = inputfolder(
            $extract_destination, "Select destination!");

        /* Move subs */
        /* Search for Subs, list only folders ( /d )*/
        $sub_folders = quicksearch("Subs /d", $path);

        /* Subs are found */
        if($sub_folders)
        {
            foreach($folder, $sub_folders, $LINE_BREAK)
            {
                moveas $folder_name, $PATH_DS_SUBTITLES, $folder;
            }
        }

        app_extraction_unrar($path, $destination);

        /* Comment and color tag folder */
        tag "Extracted: Delete Me!", $path, 2, 1;
        tag "Red", $path, 0, 0;
    }

    else // Movie release
    {
        /* Letter to extract release to */
        $letter = string_movie_first_letter($folder_name);

        /* Get IMDB-id from nfo-file, if available */
        $nfo_file = file_list_files_with_extension($path, "nfo");
        $nfo_content = readfile($nfo_file);
        $imdb = string_extract_imdb($nfo_content);

        /* Extract destination */
        $destination = $PATH_DS_MOVIE . $letter . "\" .  $folder_name;

        $confirmation = "Extract "  . $LINE_BREAK .
            $folder_name . " to "  . $LINE_BREAK . $destination;

        /* If user confirms extract location */
        if(confirm($confirmation, , 2, 4))
        {
            if(sub_path_has_subs_subfolder($path))
            {
                moveas $folder_name, $PATH_DS_SUBTITLES, $path . "\Subs";
            }

            /* Comment and color tag folder */
            tag "Extracted: Delete Me!", $path, 2, 1;
            tag "Red", $path, 0, 0;

            /* Find rar-file */
            $rar_file = quicksearch("*.rar", $path, "|");

            while(gettoken($rar_file, "count", "|") != 1)
            {
                wait 100;
                $rar_file = quicksearch("*.rar", $path, "|");
                status "Waiting for subs move";
            }

            app_extraction_unrar($rar_file, $destination);

            /* Generate movie.nfo if imdb-id found */
            if($imdb)
            {
                file_generate_movie_nfo($destination, $imdb);
            }
        }

        else // User cancels extraction
        {
            status "Cancelled", $STATUS_COLOR_ORANGE, stop;
        }
    }

    releaseglobals 3;
    end 1;
