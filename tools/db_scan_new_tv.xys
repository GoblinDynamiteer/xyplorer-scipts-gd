    include "..\const\include.xys";

    $flag_update_all = 0;
    $flag_update_single_show = 0;
    $flag_update_database = 0;

    /* CTRL-key is held */
    if(check_ctrl_button_held())
    {
        $flag_update_all = 1;
        msg "CTRL held, will update all shows that needs updating!";
    }

    $selection_full_path = select_get_selected_folder_full_path();
    $selection_name = select_get_selected_folder_name();

    if(check_is_path_in_dstv($selection_full_path) && $selection_full_path)
    {
        $tv_shows_to_update = $selection_name;
        $flag_update_single_show = 1;
        msg "Will only update: " . $selection_name;

    }

    else
    {
        $tv_shows_to_update = file_list_all_tv_show_folders();
    }

    foreach($tv_show, $tv_shows_to_update)
    {
        unset $episodes_local, $database_episodes;
        $flag_update_database = 0;
        status "Scanning for new episodes/shows: " . $tv_show;
        wait 2;

        /*  Check if TV-show is new (not in database) */
        if(db_tv_is_show_in_db($tv_show))
        {
            status "Found new Show: " . $tv_show;

            $imdb_id = python_omdb(
                $tv_show,
                "imdb",
                "series"
                );

            wait 100;

            $search_hit_data = python_omdb(
                $imdb_id,
                "full_noep"
            );

            if(!input_ask_yes_no(
                "Found new Show: " . $tv_show . "!" . $NEW_LINE .
                "Correct info?" . $NEW_LINE . $NEW_LINE .
                $search_hit_data)
                )
            {
                $imdb_id = input_ask_for_imdb($tv_show);
            }

            /* Get TVmaze-id by searching API with IMDb-id */
            $tv_maze_id = python_tvmaze(
                $imdb_id,
                "tvmaze_id",
            );

            /* Todo: Build check for TVmaze-id retrieval */

            db_tv_write_data($tv_show, "tvmaze", $tv_maze_id);
            db_tv_write_data($tv_show, "imdb", $imdb_id);
            $flag_update_database = 1;
        }

        /*  Check if show has new episodes (not in database) */
        $new_episodes = db_tv_list_episodes_not_in_db($tv_show);

        if($new_episodes)
        {
            foreach($episode, $new_episodes)
            {
                /* Status message */
                status "Found new episode: " . $tv_show . ": ". $episode,
                $STATUS_COLOR_GREEN, "ready";

                /*  Add episode to new.txt */
                file_add_new_episode($episode, $tv_show);
            }

            $flag_update_database = 1;
        }

        if(!$flag_update_database && $flag_update_all)
        {
            $episode_air_date = db_tv_read_data($tv_show, "lastaireddate");

            if($episode_air_date == "No data for next episode!")
            {
                $date_diff = 0;
            }

            else
            {
                $date_diff = datediff($episode_air_date);
            }

            $tv_status = db_tv_read_data($tv_show, "status");

            if($tv_status == "Running" && $v >= 0)
            {
                $flag_update_database = 1;
            }
        }

        if($flag_update_database || $flag_update_single_show)
        {
            /* Status message */
            status "Updating databases with new Show-info.",
            $STATUS_COLOR_GREEN, "ready";

            db_tv_update_episode_list($tv_show);
            db_tv_update_data($tv_show);
        }
    }

    file_backup_database(); // Backup database files

    status "Done!";

    releaseglobals 3;
    end 1;
