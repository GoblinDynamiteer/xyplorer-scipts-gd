    include_once "..\const\include.xys";

    /* Get movie letters/subfolders */
    $movie_letters = listfolder($PATH_DS_MOVIE, $SETTING_LISTFOLDER_PATTERN_ALL,
        $SETTING_LISTFOLDER_NO_FILES + $SETTING_LISTFOLDER_NO_PATHS);

    $flag_backup_db = 0; // Backup datase files flag
    $flag_generate_nfo = 1;

    /* Iterate trough movie letters/subfolders */
    foreach($letter, $movie_letters)
    {
        /* List movie folders in letter/subfolder */
        $movies_in_folder = listfolder(
            $PATH_DS_MOVIE . $letter,
            $SETTING_LISTFOLDER_PATTERN_ALL,
            $SETTING_LISTFOLDER_NO_FILES + $SETTING_LISTFOLDER_NO_PATHS
        );

        /* Current movies in database for letter/subfolder */
        $movies_in_database = db_movie_get_movies_for_letter($letter);

        status "Checking for new movies in: " . $letter;

        /*  New movie folders exist */
        if($movies_in_folder != $movies_in_database)
        {
            $flag_backup_db = 1;
            wait 1;

            /* Iterate through found movie folders */
            foreach($movie, $movies_in_folder)
            {
                if(strpos($movies_in_database, $movie) == $RETURN_VALUE_STRPOS_NOT_FOUND)
                {
                    status "Found new movie: " . $movie;

                    /* Path to movie folder */
                    $full_path = $PATH_DS_MOVIE . $letter . "\" . $movie;

                    /* movie.nfo exists, contains imdb-id */
                    if(exists($full_path .  "\movie.nfo"))
                    {
                        $imdb_from_nfo = string_extract_imdb(
                            readfile($full_path . "\movie.nfo")
                        );

                        /* Use IMDB-id for OMDB-search */
                        $search_data = python_omdb(
                            $imdb_from_nfo, "full");
                        $flag_generate_nfo = 0;
                    }

                    /* movie.nfo doesn't exist */
                    else
                    {
                        /* Use title and year for OMDB-search */
                        $search_data = python_omdb(
                            string_regex_movie_title_from_release($movie),
                            "full",
                            string_regex_year($movie)
                        );

                    }

                    if(!python_check_error($search_data))
                    {
                        /* Ask user if movie found on OMDB is correct */
                        $imdb_id = input_ask_yes_no(
                            "Correct data for: " . $movie . "?" . $LINE_BREAK .
                            replace($search_data, "|", $LINE_BREAK)) ?
                                string_extract_imdb($search_data) :
                                input_ask_for_imdb($movie);
                    }

                    else
                    {
                        $imdb_id = input_ask_for_imdb($movie);
                    }


                    /* Add new movie to database */
                    db_movie_write_data($movie, "imdb", $imdb_id);
                    file_generate_movie_nfo($full_path, $imdb_id);

                    status "Data set for: " . $movie;

                    db_movie_update_data($movie, $imdb_id);

                    /* Add movie to new.txt */
                    file_add_new_movie($movie, $imdb_id);
                }
            }

            db_movie_listing_update($letter);

        }

        wait 1;
    }

    if($flag_backup_db)
    {
        file_backup_database();
    }

    status "Done!";

    releaseglobals 3;
    end 1;
